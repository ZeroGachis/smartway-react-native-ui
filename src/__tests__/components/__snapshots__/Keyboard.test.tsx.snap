// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MODULE | Keyboard component renders correctly 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <View
      style={
        {
          "height": 300,
          "width": "100%",
        }
      }
    >
      <View
        style={
          {
            "flexDirection": "row",
            "height": "25%",
          }
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              {
                "backgroundColor": "#ffffff",
                "flex": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            style={
              {
                "color": "#2f4158",
                "fontSize": 24,
                "textAlign": "center",
              }
            }
          >
            1
          </Text>
        </View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              {
                "backgroundColor": "#ffffff",
                "flex": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            style={
              {
                "color": "#2f4158",
                "fontSize": 24,
                "textAlign": "center",
              }
            }
          >
            2
          </Text>
        </View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              {
                "backgroundColor": "#ffffff",
                "flex": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            style={
              {
                "color": "#2f4158",
                "fontSize": 24,
                "textAlign": "center",
              }
            }
          >
            3
          </Text>
        </View>
      </View>
      <View
        style={
          {
            "flexDirection": "row",
            "height": "25%",
          }
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              {
                "backgroundColor": "#ffffff",
                "flex": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            style={
              {
                "color": "#2f4158",
                "fontSize": 24,
                "textAlign": "center",
              }
            }
          >
            4
          </Text>
        </View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              {
                "backgroundColor": "#ffffff",
                "flex": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            style={
              {
                "color": "#2f4158",
                "fontSize": 24,
                "textAlign": "center",
              }
            }
          >
            5
          </Text>
        </View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              {
                "backgroundColor": "#ffffff",
                "flex": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            style={
              {
                "color": "#2f4158",
                "fontSize": 24,
                "textAlign": "center",
              }
            }
          >
            6
          </Text>
        </View>
      </View>
      <View
        style={
          {
            "flexDirection": "row",
            "height": "25%",
          }
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              {
                "backgroundColor": "#ffffff",
                "flex": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            style={
              {
                "color": "#2f4158",
                "fontSize": 24,
                "textAlign": "center",
              }
            }
          >
            7
          </Text>
        </View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              {
                "backgroundColor": "#ffffff",
                "flex": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            style={
              {
                "color": "#2f4158",
                "fontSize": 24,
                "textAlign": "center",
              }
            }
          >
            8
          </Text>
        </View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              {
                "backgroundColor": "#ffffff",
                "flex": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            style={
              {
                "color": "#2f4158",
                "fontSize": 24,
                "textAlign": "center",
              }
            }
          >
            9
          </Text>
        </View>
      </View>
      <View
        style={
          {
            "flexDirection": "row",
            "height": "25%",
          }
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              {
                "backgroundColor": "#ffffff",
                "flex": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "justifyContent": "center",
              }
            }
          >
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight="24"
              bbWidth="24"
              fill="#919eab"
              focusable={false}
              height="24"
              meetOrSlice={0}
              minX={0}
              minY={0}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  {
                    "flex": 0,
                    "height": 24,
                    "width": 24,
                  },
                ]
              }
              vbHeight={1024}
              vbWidth={1024}
              width="24"
            >
              <RNSVGGroup
                fill={
                  {
                    "payload": 4287733419,
                    "type": 0,
                  }
                }
                propList={
                  [
                    "fill",
                  ]
                }
              >
                <RNSVGPath
                  d="M432.090 645.513c7.821 7.821 16.947 11.733 27.375 11.733 10.432 0 19.558-3.913 27.379-11.733l80.179-79.202 80.179 80.179c7.821 7.821 16.785 11.733 26.889 11.733s19.063-3.913 26.889-11.733c7.168-7.821 10.756-16.947 10.756-27.379 0-10.428-3.588-19.554-10.756-27.379l-80.179-79.198 79.198-79.202c7.172-7.82 10.756-16.783 10.756-26.887s-3.584-19.066-10.756-26.889c-7.821-7.822-16.947-11.733-27.375-11.733-10.432 0-19.558 3.911-27.379 11.733l-78.221 79.201-81.156-80.178c-7.821-7.823-16.785-11.57-26.889-11.244s-19.068 4.074-26.889 11.244c-7.823 7.822-11.734 16.785-11.734 26.889s3.911 19.067 11.734 26.888l81.156 80.179-81.156 79.198c-7.171 7.825-10.756 16.951-10.756 27.379 0 10.432 3.585 19.23 10.756 26.402zM378.311 810.756c-19.556 0-37.482-4.727-53.778-14.178s-30.311-21.999-42.045-37.645l-136.889-192.623c-11.733-14.993-17.6-32.593-17.6-52.8s5.867-38.46 17.6-54.754l136.889-192.623c11.733-16.296 25.748-29.17 42.045-38.622s34.222-14.178 53.778-14.178h396.976c25.425 0 47.262 9.126 65.515 27.378 18.249 18.252 27.375 40.089 27.375 65.511v412.622c0 25.421-9.126 47.095-27.375 65.024-18.253 17.924-40.090 26.889-65.515 26.889h-396.976zM222.845 512.533l144.711 206.31h407.732v-412.622h-407.732l-144.711 206.311zM775.287 512.533v-206.311 206.311z"
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  propList={
                    [
                      "stroke",
                      "strokeWidth",
                    ]
                  }
                  stroke={
                    {
                      "payload": 4287733419,
                      "type": 0,
                    }
                  }
                  strokeWidth="5"
                />
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
        </View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              {
                "backgroundColor": "#ffffff",
                "flex": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <Text
            style={
              {
                "color": "#2f4158",
                "fontSize": 24,
                "textAlign": "center",
              }
            }
          >
            0
          </Text>
        </View>
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              {
                "backgroundColor": "#ffffff",
                "flex": 1,
                "justifyContent": "center",
              },
            ]
          }
        >
          <View
            style={
              {
                "alignItems": "center",
                "justifyContent": "center",
              }
            }
          >
            <RNSVGSvgView
              align="xMidYMid"
              bbHeight="24"
              bbWidth="24"
              fill="#18a586"
              focusable={false}
              height="24"
              meetOrSlice={0}
              minX={0}
              minY={0}
              style={
                [
                  {
                    "backgroundColor": "transparent",
                    "borderWidth": 0,
                  },
                  {
                    "flex": 0,
                    "height": 24,
                    "width": 24,
                  },
                ]
              }
              vbHeight={1024}
              vbWidth={1024}
              width="24"
            >
              <RNSVGGroup
                fill={
                  {
                    "payload": 4279805318,
                    "type": 0,
                  }
                }
                propList={
                  [
                    "fill",
                  ]
                }
              >
                <RNSVGPath
                  d="M504.802 739.021c-9.126-9.775-13.854-20.86-14.178-33.242-0.329-12.386 4.399-23.142 14.178-32.269l111.467-112.444h-484.98c-13.037 0-23.956-4.399-32.755-13.201-8.8-8.798-13.2-19.716-13.2-32.755 0-13.035 4.4-23.953 13.2-32.755 8.8-8.798 19.718-13.201 32.755-13.201h484.98l-111.467-112.443c-9.779-9.126-14.507-20.37-14.178-33.734 0.324-13.363 5.052-24.282 14.178-32.756 9.122-9.777 19.878-14.504 32.265-14.178s23.142 5.052 32.269 14.178l192.619 192.624c4.565 4.561 7.987 9.613 10.27 15.155 2.278 5.538 3.422 11.243 3.422 17.109s-1.143 11.571-3.422 17.114c-2.283 5.538-5.705 10.59-10.27 15.155l-191.642 191.642c-9.126 9.126-20.045 13.525-32.755 13.201-12.715-0.324-23.633-4.727-32.755-13.201zM900.8 772.267c-13.687 0-24.934-4.399-33.732-13.201-8.802-8.798-13.201-19.716-13.201-32.755v-424.355c0-13.037 4.399-23.955 13.201-32.755 8.798-8.8 20.045-13.2 33.732-13.2 13.039 0 23.957 4.4 32.755 13.2 8.802 8.8 13.201 19.718 13.201 32.755v424.355c0 13.039-4.399 23.957-13.201 32.755-8.798 8.802-19.716 13.201-32.755 13.201z"
                  fill={
                    {
                      "payload": 4278190080,
                      "type": 0,
                    }
                  }
                  propList={
                    [
                      "stroke",
                      "strokeWidth",
                    ]
                  }
                  stroke={
                    {
                      "payload": 4279805318,
                      "type": 0,
                    }
                  }
                  strokeWidth="5"
                />
              </RNSVGGroup>
            </RNSVGSvgView>
          </View>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaProvider>
`;
